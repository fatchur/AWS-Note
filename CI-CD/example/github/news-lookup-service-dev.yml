
  
name: News-Lookup-CI/CD-Dev

on:
  push:
    branches: [ dev ]
    paths:
      - 'mlops-rec-workers/news-lookup-service/**'

env:
  CLUSTER: mlops-rec-v2 
  #TASK_DEFINITION_NAME: news-lookup-consumer
  #SERVICE: news-lookup-consumer
  TASK_DEFINITION_NAME: mlops-rec-workers
  SERVICE: mlops-rec-workers
  CONTAINER_NAME: mlops-rec-news-lookup-images
  IMAGE: 808669242981.dkr.ecr.us-east-1.amazonaws.com/mlops-rec-news-lookup-images
  WORKDIR: mlops-rec-workers/news-lookup-service

jobs:
  continuous-deployment:
    runs-on: ubuntu-latest
    #needs: [continuous-integration]
    if: github.ref == 'refs/heads/dev'
    permissions:
      packages: write
      contents: read
      id-token: write
    
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION_DEV }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        run: |
          docker build --tag "$IMAGE:$GITHUB_SHA" .
          docker push "$IMAGE:$GITHUB_SHA"
          echo "::set-output name=image::$IMAGE:$GITHUB_SHA"
        working-directory: ${{ env.WORKDIR }}

      - name: Download Task Definition
        run: |
          aws ecs describe-task-definition \
          --task-definition ${{ env.TASK_DEFINITION_NAME }} \
          --query taskDefinition > ${{ env.WORKDIR }}/task-definition.json
          
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.WORKDIR }}/task-definition.json
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}
          environment-variables: |
              AWS_REGION=${{ secrets.AWS_DEFAULT_REGION_DEV }}
              DYNAMO_PROGRESS_TABLE_NAME=${{ secrets.DYNAMO_PROGRESS_TABLE_NAME }}
              DYNAMO_DISTANCE_TABLE_NAME=${{ secrets.DYNAMO_DISTANCE_TABLE_NAME }}
              RECOMMENDATION_TOP_RANK_SELECTED=${{ secrets.RECOMMENDATION_TOP_RANK_SELECTED }}
              SQS_NEWS_LOOKUP_QUEUE=${{ secrets.SQS_NEWS_LOOKUP_QUEUE }}
              DYNAMO_NEWS_TABLE_NAME=${{ secrets.DYNAMO_NEWS_TABLE_NAME }}
              DYNAMO_RECOMMENDATION_TABLE_NAME=${{ secrets.DYNAMO_RECOMMENDATION_TABLE_NAME }}
              DYNAMO_EDITORIAL_TABLE_NAME=${{ secrets.DYNAMO_EDITORIAL_TABLE_NAME }}
              DYNAMO_MOST_COMMENTED_TABLE_NAME=${{ secrets.DYNAMO_MOST_COMMENTED_TABLE_NAME }}
              DYNAMO_MOST_POPULAR_TABLE_NAME=${{ secrets.DYNAMO_MOST_POPULAR_TABLE_NAME }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.SERVICE }}
          cluster: ${{ env.CLUSTER }}
          wait-for-service-stability: true